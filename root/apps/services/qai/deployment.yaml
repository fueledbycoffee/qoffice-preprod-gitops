apiVersion: apps/v1
kind: Deployment
metadata: { name: qai, namespace: platform }
spec:
  replicas: 1
  selector: { matchLabels: { app: qai } }
  template:
    metadata: { labels: { app: qai } }
    spec:
      initContainers:
        - name: wait-for-db
          image: postgres:16-alpine
          command:
            - sh
            - -c
            - |
              until pg_isready -h postgres.infra.svc.cluster.local -U qoffice; do
                echo "Waiting for database..."
                sleep 2
              done
              echo "Database is ready!"
      containers:
        - name: qai
          image: ghcr.io/fueledbycoffee/qoffice-qai:preprod-latest
          ports: [ { containerPort: 8080 } ]
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 3
          env:
            - name: S3_ENDPOINT
              value: http://minio.data.svc.cluster.local:9000
            - name: S3_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: s3-credentials
                  key: S3_ACCESS_KEY
            - name: S3_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: s3-credentials
                  key: S3_SECRET_KEY
            - name: QAI_POSTGRES_URL
              valueFrom:
                secretKeyRef:
                  name: qai-secrets
                  key: QAI_POSTGRES_URL
            - name: QAI_SERVER_PORT
              value: "8180"
            - name: QAI_ENVIRONMENT
              value: "production"
            - name: QAI_LOG_LEVEL
              value: "info"
            - name: QAI_OPENAI_KEY
              value: "configured-via-database"
            - name: QAI_REDIS_ADDR
              value: "redis.infra.svc.cluster.local:6379"
            - name: QAI_REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-password
                  key: REDIS_PASSWORD
            - name: QAI_ENCRYPTION_ENABLED
              value: "false"
            - name: QAI_DATA_RETENTION_DAYS
              value: "365"
            - name: QAI_DEFAULT_RATE_LIMIT
              value: "30"
